name: CI Pipeline for Node.js App

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install

    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t berkayb0306/nodejs-express-mysql-app:latest .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push berkayb0306/nodejs-express-mysql-app:latest

    - name: Install ArgoCD CLI
      run: |
        curl -LO https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd-linux-amd64
        sudo mv argocd-linux-amd64 /usr/local/bin/argocd

    - name: ArgoCD Sync
      run: |
         argocd app sync nodejs-express-mysql

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.5.0
      with:
        cluster_name: "berkay-project"
        node_image: "kindest/node:v1.27.3"
        config: kind-config.yaml


    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Get Cluster Info
      run: |
        kubectl cluster-info
        kubectl get nodes -o wide
        kubectl get pods -A

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/mysql-config.yaml
        kubectl apply -f k8s/mysql-secret.yaml
        kubectl apply -f k8s/mysql-pvc.yaml
        kubectl apply -f k8s/mysql-deployment.yaml
        kubectl apply -f k8s/mysql-service.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Check Deployment Status
      run: |
        echo "Waiting for deployments to be ready..."
        kubectl wait --for=condition=available deployment/nodejs-app --timeout=300s
        kubectl wait --for=condition=available deployment/mysql --timeout=300s
        echo "Checking pod status..."
        kubectl get pods
        echo "Checking services..."
        kubectl get services
